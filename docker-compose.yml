services:
  db:
    image: mariadb:10.11.13
    container_name: larasoft-db
    environment:
      MYSQL_ROOT_PASSWORD: 140894S@a
      MYSQL_DATABASE: larasoft_db
      MYSQL_USER: wpadmin
      MYSQL_PASSWORD: 140894S@a
    volumes:
      - db_data:/var/lib/mysql
    # MariaDB starts fast, so no need for explicit healthcheck for this test.
    restart: always

  # 2. WordPress Service (Backend CMS)
  wordpress:
    depends_on:
      - db
    image: wordpress:latest
    container_name: wordpress-cms
    ports:
      - "8080:80"
    environment:
      WORDPRESS_DB_HOST: db:3306
      WORDPRESS_DB_USER: wpadmin
      WORDPRESS_DB_PASSWORD: 140894S@a
      WORDPRESS_DB_NAME: larasoft_db
    volumes:

      - ./wp-content-backup:/var/www/html/wp-content
      - ./larasoft-theme:/var/www/html/wp-content/themes/larasoft-theme
    restart: always

volumes:
  # Define named volumes to ensure data and files are persistent
  db_data:
  wp_data:


#   services:
#   db:
#     image: mariadb:10.11.3
#     container_name: larasoft-db
#     restart: unless-stopped
#     environment:
#       MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
#       MYSQL_DATABASE: ${MYSQL_DATABASE}
#       MYSQL_USER: ${MYSQL_USER}
#       MYSQL_PASSWORD: ${MYSQL_PASSWORD}
#     volumes:
#       - db_data:/var/lib/mysql
#       - ./backup.sql:/docker-entrypoint-initdb.d/backup.sql
#     networks:
#       - larasoft

#   wordpress:
#     depends_on:
#       - db
#     image: wordpress:latest
#     container_name: wordpress-cms
#     restart: unless-stopped
#     ports:
#       - '8080:80'
#     environment:
#       WORDPRESS_DB_HOST: db:3306
#       WORDPRESS_DB_USER: ${MYSQL_USER}
#       WORDPRESS_DB_PASSWORD: ${MYSQL_PASSWORD}
#       WORDPRESS_DB_NAME: ${MYSQL_DATABASE}
#     volumes:
#       - ./wp-content-backup:/var/www/html/wp-content
#     networks:
#       - larasoft

# networks:
#   larasoft:
#     driver: bridge

# volumes:
#   db_data: